#
# DAL Deployment script for CentOS 7
# Copyright (c) 2016, Diversity Arrays Technology, All rights reserved.
#
# Author: Puthick Hok
# Date: 08/08/2016
# Description: Supporting ansible playbook script
#

    - name: Add YUM repository
      shell: "[[ `rpm -qa | grep 'pgdg-centos95-9.5-2.noarch'` ]] || rpm -ivh http://yum.postgresql.org/9.5/redhat/rhel-7-x86_64/pgdg-centos95-9.5-2.noarch.rpm"

    - name: Install Postgres
      yum: state=installed pkg={{ item }}
      with_items:
        - postgresql95
        - postgresql95-server
        - postgresql95-libs
        - postgresql95-contrib
        - postgresql95-devel

    - name: Install ele-release package
      shell: "[[ `rpm -qa | grep 'epel-release'` ]] || yum -y install epel-release"

    - name: Add mysql YUM repo package
      shell: "[[ `rpm -qa | grep 'mysql57-community-release-el7'` ]] || rpm -ivh http://dev.mysql.com/get/mysql57-community-release-el7-8.noarch.rpm"

    - name: Install PostGIS
      yum: state=installed pkg={{ item }}
      with_items:
        - postgis2_95
        - postgis2_95-client

    - name: Install supporting binaries
      yum: state=present pkg={{ item }}
      with_items:
        - git
        - make
        - gcc
        - bison
        - openssl
        - openssl-devel
        - libxml2
        - libxml2-devel
        - perl
        - httpd
        - httpd-devel
        - mysql-server
        - perl-DBI
        - perl-DBD-mysql
        - perl-DBD-Pg
        - perl-DBD-SQLite
        - shapelib
        - shapelib-devel
        - perl-ExtUtils-Manifest
        - perl-ExtUtils-MakeMaker
        - perl-Data-Dumper
        - perl-Digest-SHA
        - perl-Digest-MD5
        - perl-Compress-Raw-Bzip2
        - perl-Compress-Raw-Zlib
        - perl-DateTime-Format-MySQL
        - perl-DateTime-Format-Pg
        - perl-CGI-Application
        - perl-Authen-Simple
        - perl-Apache-Htpasswd
        - perl-UNIVERSAL-require
        - perl-String-Random
        - perl-Config-Simple
        - perl-Text-CSV
        - perl-Text-CSV_XS
        - perl-JSON-XS
        - perl-XML-DOM
        - perl-Env
        - perl-CGI-Session
        - perl-XML-SAX
        - perl-Test-TCP
        - perl-String-Escape
        - libselinux-python

    - name: Install mod_perl 2.0.9
      shell: "[[ `rpm -qa | grep 'mod_perl-2.0.9'` ]] || rpm -ihv http://repo.openfusion.net/centos7-x86_64/mod_perl-2.0.9-1.of.el7.x86_64.rpm"

    - name: Install mod_perl-devel
      shell: "[[ `rpm -qa | grep 'mod_perl-devel-2.0.9'` ]] || rpm -ihv http://repo.openfusion.net/centos7-x86_64/mod_perl-devel-2.0.9-1.of.el7.x86_64.rpm"

    - name: Install cpanm
      shell: curl -L https://cpanmin.us | perl - App::cpanminus
      register: bash_result
      changed_when: "bash_result.rc != 0"

    - name: Install Perl Libraries used in DAL
      cpanm: name={{ item }}
      with_items:
        - Geo::Coder::Google
        - Text::CSV::Simple
        - Email::Valid
        - Apache2_4::AuthCookie
        - Color::Calc
        - CGI::Session
        - CGI::Application::Dispatch
        - CGI::Application::Plugin::AutoRunmode
        - CGI::Application::Plugin::ActionDispatch
        - CGI::Application::Plugin::DevPopup
        - CGI::Application::Plugin::Session
        - CGI::Application::Plugin::Config::Simple
        - Log::Log4perl
        - Net::OAuth2::Client
        - Net::OAuth2::AccessToken
        - Net::SSLeay
        - IO::Socket::SSL
        - Mozilla::CA
        - Tree::R
        - Hash::Merge
        - XML::Parser::PerlSAX
        - File::Lockfile
        - JSON::Validator
        - XML::XSLT
        - XML::Writer
        - XML::Simple

    - name: Install Crypt-Random dependent Class-Loader from rpm
      shell: "[[ `rpm -qa | grep 'perl-Class-Loader'` ]] || rpm -ihv http://repo.openfusion.net/centos7-x86_64/perl-Class-Loader-2.03-1.of.el7.noarch.rpm"

    - name: Install Crypt-Random dependent Math-Pari from rpm
      shell: "[[ `rpm -qa | grep 'perl-Math-Pari'` ]] || rpm -ihv http://repo.openfusion.net/centos7-x86_64/perl-Math-Pari-2.010808-1.of.el7.x86_64.rpm"

    - name: Install Crypt-Random from rpm
      shell: "[[ `rpm -qa | grep 'perl-Crypt-Random'` ]] || rpm -ihv http://repo.openfusion.net/centos7-x86_64/perl-Crypt-Random-1.25-1.of.el7.noarch.rpm"

    - name: Install Geo::Shapelib manually 
      shell: >
        cd /tmp;
        curl -L http://www.cpan.org/authors/id/A/AJ/AJOLMA/Geo-Shapelib-0.21.tar.gz | tar zx;
        cd /tmp/Geo-Shapelib-0.21;
        perl -w Makefile.PL --shapelib=/usr/lib64/libshp.so.1;
        make install;
        rm -rf /tmp/Geo-Shapelib-0.21

    - name: Install CGI::Application::Plugin::Authentication manually
      shell: >
        cd /tmp;
        curl -L http://www.cpan.org/authors/id/S/SI/SILASMONK/CGI-Application-Plugin-Authentication-0.20.tar.gz | tar zx;
        cd /tmp/CGI-Application-Plugin-Authentication-0.20;
        perl -w Makefile.PL;
        make install;
        rm -rf /tmp/CGI-Application-Plugin-Authentication-0.20

    - name: Install XML::Checker manually
      shell: >
        cd /tmp;
        curl -L http://search.cpan.org/CPAN/authors/id/T/TJ/TJMATHER/XML-Checker-0.13.tar.gz | tar zx;
        cd /tmp/XML-Checker-0.13;
        perl -w Makefile.PL;
        make;
        make install;
        rm -rf /tmp/XML-Checker-0.13

    - name: Copy the tar.gz file
      copy: src={{ local_tar_gz_file }} dest={{ src_file }}

    - name: Create local_dir
      shell: "[[ -d {{ local_dir }} ]] || mkdir {{ local_dir }}"

    - name: Untar and decompress KDDart source
      shell: >
        if [ -d {{ local_dir }} ]; then 
        cd {{ local_dir }};
        tar -zxvf {{ src_file }} --strip 1;
        fi;

    - name: Install MonetDB release package
      shell: "[[ `rpm -qa | grep 'MonetDB-release-epel-1.1-1'` ]] || rpm -ivh https://www.monetdb.org/downloads/epel/MonetDB-release-epel-1.1-1.monetdb.noarch.rpm"

    - name: Import MonetDB GPG Key
      shell: rpm --import https://www.monetdb.org/downloads/MonetDB-GPG-KEY

    - name: Install MonetDB
      yum: state=installed pkg={{ item }}
      with_items:
        - MonetDB-SQL-server5-11.19.9
        - MonetDB-client-11.19.9
        - MonetDB-client-perl-11.19.9

    - name: Start monetdb service
      shell: >
        ldconfig;
        mkdir -p /var/lib/monetdb;
        [[ -d /var/lib/monetdb/dbfarm ]] || monetdbd create /var/lib/monetdb/dbfarm;
        [[ `pidof /usr/bin/monetdbd` -gt 1 ]] || /usr/bin/monetdbd start /var/lib/monetdb/dbfarm;

    - name: Copy MAL file to monetdb autoload
      shell: "cp -f {{local_dir}}/other/kddart.mal /usr/lib64/monetdb5/autoload/99_kddart.mal"

    - name: Initialize Postgres
      shell: "[[ -e /var/lib/pgsql/9.5/data/pg_hba.conf ]] || /usr/pgsql-9.5/bin/postgresql95-setup initdb"

    - service: name=postgresql-9.5 state=started

    - name: Configure PostgreSQL access permission settings
      shell: >
        mv /var/lib/pgsql/9.5/data/pg_hba.conf /var/lib/pgsql/9.5/data/pg_hba_conf`date +'%Y%m%d'`;
        echo 'local   all             all                                   trust' > /var/lib/pgsql/9.5/data/pg_hba.conf;
        echo 'host    all             all             127.0.0.1/32          trust' >> /var/lib/pgsql/9.5/data/pg_hba.conf;
        echo 'host    all             all             ::1/128               trust' >> /var/lib/pgsql/9.5/data/pg_hba.conf;
        echo 'host    kddart_gis_enviro_{{ dal_db_version }}  all           {{ ip_network }}        password' >> /var/lib/pgsql/9.5/data/pg_hba.conf;
        echo 'host    kddart_gis_enviro_{{ dal_db_version }}  all           127.0.0.1/24            password' >> /var/lib/pgsql/9.5/data/pg_hba.conf;

    - service: name=postgresql-9.5 state=restarted

    - name: Append Marker SQL group_concat definition
      shell: echo 'CREATE AGGREGATE group_concat(t text) RETURNS text external name "kddart"."group_concat";' >> {{ local_dir }}/other/db_files/kddart_marker_dal_{{ dal_version }}.sql

    - name: Adjust create_dbs.sh update the password
      shell: >
        sed -i "s|MONET_PASS='monetdb'|MONET_PASS='{{ monetdbpass }}'|g" {{ local_dir }}/other/create_dbs.sh;
        sed -i "s|DB_PASS='yourSecurePassword'|DB_PASS='{{ dbpass }}'|g" {{ local_dir }}/other/create_dbs.sh;

    - service: name=mysqld state=started

    - name: Enable root login to mysql using temporary password and change the MySQL root password
      shell: >
        if [ ! -e /root/.my.cnf ]; then echo "[client]" > /root/.my.cnf && echo "user=root" >> /root/.my.cnf && echo "password=`grep 'temporary password' /var/log/mysqld.log | gawk '{print $NF}'`" >> /root/.my.cnf && echo "ALTER USER 'root'@'localhost' IDENTIFIED BY '{{ mysqlrootpass }}'" | mysql -u root mysql --connect-expired-password; fi;

    - name: Disable sql_mode
      shell: >
        echo "set global sql_mode='NO_ENGINE_SUBSTITUTION'" | mysql -u root --password={{ mysqlrootpass }};
        [[ `grep 'sql-mode' /etc/my.cnf` ]] || echo 'sql-mode="NO_ENGINE_SUBSTITUTION"' >> /etc/my.cnf;

    - name: Put the root password into create_dbs.sh later remove
      shell: >
        sed -i "s|MYSQL_PASS_ARG=''|MYSQL_PASS_ARG='--password={{ mysqlrootpass }}'|" {{ local_dir }}/other/create_dbs.sh;
        sed -i "s|set -e|#set -e|" {{ local_dir }}/other/create_dbs.sh;

    - name: Create KDDart Databases
      shell: "{{ local_dir }}/other/create_dbs.sh 1 kddart_gis_enviro_{{ dal_db_version }} {{ local_dir }}/other/db_files/kddart_gis_enviro_dal_{{ dal_version }}_postgis2.sql kddart_{{ dal_db_version }} {{ local_dir }}/other/db_files/kddart_dal_{{ dal_version }}.sql kddart_marker_{{ dal_db_version }} {{ local_dir }}/other/db_files/kddart_marker_dal_{{ dal_version }}.sql 1 > /root/create_dbs.log 2>&1"

    - name: Save create dbs command for manual run to fix monetdb problem
      shell: echo "{{ local_dir }}/other/create_dbs.sh 1 kddart_gis_enviro_{{ dal_db_version }} {{ local_dir }}/other/db_files/kddart_gis_enviro_dal_{{ dal_version }}_postgis2.sql kddart_{{ dal_db_version }} {{ local_dir }}/other/db_files/kddart_dal_{{ dal_version }}.sql kddart_marker_{{ dal_db_version }} {{ local_dir }}/other/db_files/kddart_marker_dal_{{ dal_version }}.sql 1 > /root/create_dbs.log 2>&1" > {{ local_dir }}/other/run_create_dbs.sh; chmod 755 {{ local_dir }}/other/run_create_dbs.sh;

    - name: Remove MySQL root password .my.cnf
      shell: >
        if [ -e /root/.my.cnf ]; then echo " " > /root/.my.cnf; fi;

    - name: Make host entry
      shell: "[[ `grep '{{ dal_address_name }}' /etc/hosts` ]] || echo \"`ip route get 1 | awk '{print $NF;exit}'`	{{ dal_address_name }}\" >> /etc/hosts"

    - name: Copy apache configuration
      shell: "[[ -f {{ dest_apache_conf_dir }}/http-{{ dal_address_name }}.conf ]] || cp {{local_dir}}/other/http-kddart.example.com.conf {{ dest_apache_conf_dir }}/http-{{ dal_address_name }}.conf"

    - name: Adjust Apache conf to Centos
      shell: >
        sed -i 's|/srv/www/vhosts/kddart.example.com|{{ apache_base_dir }}/vhosts/{{ dal_address_name }}|g' {{ dest_apache_conf_dir }}/http-{{ dal_address_name }}.conf;
        sed -i 's|/var/log/apache2|/var/log/httpd|g' {{ dest_apache_conf_dir }}/http-{{ dal_address_name }}.conf;
        sed -i 's|kddart.example.com|{{ dal_address_name }}|g' {{ dest_apache_conf_dir }}/http-{{ dal_address_name }}.conf;

    - name: Create directories
      file: path={{ item }} state=directory owner=apache group=apache mode=0755
      with_items:
        - '{{ apache_base_dir }}/cgi-bin/kddart'
        - '{{ apache_base_dir }}/tmp/kddart'
        - '{{ apache_base_dir }}/perl-lib'
        - '{{ apache_base_dir }}/vhosts'
        - '{{ apache_base_dir }}/vhosts/{{ dal_address_name }}'
        - '{{ apache_base_dir }}/session/kddart'
        - '{{ apache_base_dir }}/secure'
        - '{{ apache_base_dir }}/vhosts/{{ dal_address_name }}/storage'
        - '{{ apache_base_dir }}/vhosts/{{ dal_address_name }}/storage/multimedia'

    - name: Create monetdb password file
      shell: "[[ -f {{ apache_base_dir }}/secure/monetdb_user.txt ]] || echo \"username = monetdb\npassword = {{ monetdbpass }}\" > {{ apache_base_dir }}/secure/monetdb_user.txt"

    - name: Create mysql password file
      shell: "[[ -f {{ apache_base_dir }}/secure/mysql_user.txt ]] || echo \"username = kddart_dal\npassword = {{ dbpass }}\" > {{ apache_base_dir }}/secure/mysql_user.txt"

    - name: Create postgres password file
      shell: "[[ -f {{ apache_base_dir }}/secure/postgres_user.txt ]] || echo \"username = kddart_dal\npassword = {{ dbpass }}\" > {{ apache_base_dir }}/secure/postgres_user.txt"

    - name: Copy files to the relevant direcotries - due to * it needs in one line
      shell: >
        cp -rp {{ local_dir }}/vhosts/kddart.example.com/* {{ apache_base_dir }}/vhosts/{{ dal_address_name }};
        cp -rp {{ local_dir}}/perl-lib/* {{ apache_base_dir }}/perl-lib;
        cp {{local_dir}}/other/kddart_dal.cfg {{ apache_base_dir }}/secure;
        cp {{local_dir}}/cgi-bin/kddart/* {{ apache_base_dir }}/cgi-bin/kddart;
        mv {{ apache_base_dir }}/vhosts/{{ dal_address_name }}/data/admin/.htaccess {{ apache_base_dir }}/vhosts/{{ dal_address_name }}/data/admin/.htaccess_stopped;

    - name: Change /srv/www to {{ apache_base_dir }}
      shell: sed -i "s|/srv/www|{{ apache_base_dir }}|" {{ apache_base_dir }}/secure/kddart_dal.cfg

    - name: Change /tmp/kddart to {{ apache_base_dir }}/tmp/kddart (Apache2.4 cannot write to /tmp)
      shell: sed -i "s|/tmp/kddart/|{{ apache_base_dir }}/tmp/kddart/|" {{ apache_base_dir }}/secure/kddart_dal.cfg;

    - name: Change ACL for tmp directory
      shell: >
        setfacl -d -m o::rx {{ apache_base_dir }}/tmp/kddart;
        setfacl -d -m g::rwx {{ apache_base_dir }}/tmp/kddart;

    - name: Include mod_perl module loading
      shell: "[[ `grep '^LoadModule perl_module' {{ apache_module_conf }}` ]] || echo 'LoadModule perl_module modules/mod_perl.so' >> {{ apache_module_conf }}"

    - name: Include perl-lib into apache config
      shell: "[[ `grep 'PerlSwitches' {{ main_apache_conf }}` ]] || sed -i 's|Listen 80|Listen 80\\n\\nPerlSwitches -I{{ apache_base_dir }}/perl-lib|' {{ main_apache_conf }}"

    - name: Enable Apache perl config
      shell: >
        if [ ! `grep '^<Directory /var/www/perl-lib>' {{ dest_apache_conf_dir }}/perl.conf` ]; then echo "<Directory /var/www/perl-lib>" >> {{ dest_apache_conf_dir }}/perl.conf; echo "    SetHandler perl-script" >> {{ dest_apache_conf_dir }}/perl.conf; echo "    PerlResponseHandler ModPerl::Registry" >> {{ dest_apache_conf_dir }}/perl.conf; echo "    PerlOptions +ParseHeaders" >> {{ dest_apache_conf_dir }}/perl.conf; echo "    Options +ExecCGI" >> {{ dest_apache_conf_dir }}/perl.conf; echo "</Directory>" >> {{ dest_apache_conf_dir }}/perl.conf; fi;

    - name: Change ower and group manually
      shell: chown apache:apache -R {{ apache_base_dir }}/vhosts/{{ dal_address_name }}

    - name: Enable Httpd
      shell: systemctl enable httpd

    - name: Enable MySQL
      shell: systemctl enable mysqld

    - name: Enable PostgreSQL
      shell: systemctl enable postgresql-9.5

    - name: Disable firewall
      shell: systemctl disable firewalld

    - selinux: state=disabled

    - name: Make MonetDB start by default at boot time
      shell: >
        [[ `grep 'monetdbd start' /etc/rc.d/rc.local` ]] || echo "monetdbd start /var/lib/monetdb/dbfarm" >> /etc/rc.d/rc.local;
        chmod +x /etc/rc.d/rc.local;

    - name: Update base URL for test cases
      shell: echo "http://{{ dal_address_name }}/dal" > {{ local_dir }}/other/whitebox_test_cases/TestSuite/dal_base_url.conf

    - name: Remove timestamp from all test cases to prevent time issue - this cannot be done from repo
      shell: find {{ local_dir }}/other/whitebox_test_cases/TestSuite -iname 'case*.*' -exec sed -i 's|<RunInfo.*||' {} ";"
