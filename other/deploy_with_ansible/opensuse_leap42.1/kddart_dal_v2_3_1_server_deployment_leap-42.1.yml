#
# DAL Deployment script for Leap 42.1
# Copyright (c) 2016, Diversity Arrays Technology, All rights reserved.
#
# Author: Puthick Hok
# Date: 01/02/2016
# Usage: ansible-playbook kddart_server_deployment_leap-42.1.yml
# Description: By running the usage command, ansible will install and configure DAL
#              according the instructions in kddart_server_deployment_leap-42.1.yml.
#              This script needs to be run by root.
#              For more information about how to read and write an ansible playbook,
#              please refer to ansible documentation on the web.
#

- hosts: kddartserver
  gather_facts: no
  vars_prompt:
    - name: "svnuser"
      prompt: "Enter svn username"
      private: no

    - name: "svnpass"
      prompt: "Enter svn password"
      private: yes

    - name: "monetdbpass"
      prompt: "Password for monetdb user for DAL to connect to monetdb"
      private: no

    - name: "mysqlpass"
      prompt: "Password for kddart_dal user for DAL to connect to mysql"
      private: no

    - name: "postgrespass"
      prompt: "Password for kddart_dal user for DAL to connect to postgresql"
      private: no

  vars:
    dal_repo: svn://svn.diversityarrays.com/KDDArT-DAL/tags/v2.3.1
    local_dir: /root/KDDArT-DAL-v2.3.1
    apache_base_dir: /srv/www
    local_src_dir: /usr/local
    force_tasks: True

  tasks:

    - zypper_repository: repo='http://download.opensuse.org/repositories/home:/Gankov:/branches:/Application:/Geo/openSUSE_Leap_42.1/home:Gankov:branches:Application:Geo.repo' state=present

    - zypper_repository: repo='http://download.opensuse.org/repositories/Application:/Geo/openSUSE_Tumbleweed/Application:Geo.repo'

    - name: Install supporting binaries
      zypper: pkg={{item}} state=present disable_gpg_check=yes
      with_items:
        - make
        - gcc
        - subversion
        - perl
        - apache2
        - apache2-mod_perl
        - perl-App-cpanminus
        - mysql
        - perl-DBI
        - perl-DBD-mysql
        - perl-DBD-Pg
        - perl-DBD-SQLite
        - postgresql
        - postgresql-server
        - postgresql-init
        - postgresql-contrib
        - postgresql94-postgis
        - shapelib
        - libshp-devel

    - name: Remove nagios-www (its apache config is not Apache 2.4 ready)
      zypper: pkg=nagios-www state=absent

    - name: Remove svn export local directory if exists
      shell: "[[! -d {{local_dir}} ]] || rm -rf {{local_dir}}"
      when: force_tasks

    - name: Export DAL version 2.3.1 repo
      subversion: repo={{dal_repo}} dest={{local_dir}} username={{svnuser}} password={{svnpass}} export=True
      when: force_tasks

    - shell: curl -L https://cpanmin.us | perl - App::cpanminus
      register: bash_result
      changed_when: "bash_result.rc != 0"

    - name: Install Perl Libraries used in DAL
      cpanm: name={{item}}
      with_items:
        - Geo::Coder::Google
        - Text::CSV
        - Text::CSV_XS
        - Text::CSV::Simple
        - DateTime::Format::MySQL
        - DateTime::Format::Pg
        - Email::Valid
        - Config::Simple
        - Apache2::AuthCookie
        - Crypt::Random
        - Color::Calc
        - Apache::Htpasswd
        - Authen::Simple
        - CGI::Application
        - CGI::Application::Dispatch
        - CGI::Application::Plugin::AutoRunmode
        - CGI::Application::Plugin::ActionDispatch
        - CGI::Application::Plugin::DevPopup
        - CGI::Application::Plugin::Session
        - Log::Log4perl
        - Net::OAuth2::Client
        - Net::OAuth2::AccessToken
        - Net::SSLeay
        - IO::Socket::SSL
        - Mozilla::CA
        - Tree::R
        - JSON::XS
        - Hash::Merge
        - XML::DOM
        - XML::Parser::PerlSAX
        - File::Lockfile
        - JSON::Validator
        - String::Random
        - XML::XSLT
        - UNIVERSAL::require
       
    - name: Install Geo::Shapelib manually 
      shell: >
        cd /tmp;
        curl -L http://www.cpan.org/authors/id/A/AJ/AJOLMA/Geo-Shapelib-0.21.tar.gz | tar zx;
        cd /tmp/Geo-Shapelib-0.21;
        perl -w Makefile.PL --shapelib=/usr/lib64/libshp.so;
        make install;
        rm -rf /tmp/Geo-Shapelib-0.21

    - name: Install CGI::Application::Plugin::Authentication manually
      shell: >
        cd /tmp;
        curl -L http://www.cpan.org/authors/id/S/SI/SILASMONK/CGI-Application-Plugin-Authentication-0.20.tar.gz | tar zx;
        cd /tmp/CGI-Application-Plugin-Authentication-0.20;
        perl -w Makefile.PL;
        make install;
        rm -rf /tmp/CGI-Application-Plugin-Authentication-0.20

    - name: Install XML::Checker manually
      shell: >
        cd /tmp;
        curl -L http://search.cpan.org/CPAN/authors/id/T/TJ/TJMATHER/XML-Checker-0.13.tar.gz | tar zx;
        cd /tmp/XML-Checker-0.13;
        perl -w Makefile.PL;
        make;
        make install;
        rm -rf /tmp/XML-Checker-0.13

    - name: Install monetdb manually
      shell: >
        cd {{local_src_dir}};
        curl -L https://www.monetdb.org/downloads/sources/Oct2014-SP2/MonetDB-11.19.9.tar.xz | tar Jx;
        cd {{local_src_dir}}/MonetDB-11.19.9;
        {{local_src_dir}}/MonetDB-11.19.9/configure --with-no-jdbc;
        make;
        make install;
        cd {{local_src_dir}}/MonetDB-11.19.9/clients/perl;
        make;
        make install;
        cp -rp {{local_src_dir}}/lib/perl5/vendor_perl/5.18.2/x86_64-linux-thread-multi/* /usr/lib/perl5/vendor_perl/5.18.2/x86_64-linux-thread-multi/;
        rm -rf {{local_src_dir}}/MonetDB-11.19.9;
        cp {{local_dir}}/other/kddart.mal /usr/local/lib64/monetdb5/autoload;

    - name: Start monetdb service
      shell: >
        ldconfig;
        mkdir -p /var/lib/monetdb;
        [[ -d /var/lib/monetdb/dbfarm ]] || /usr/local/bin/monetdbd create /var/lib/monetdb/dbfarm;
        [[ `pidof /usr/local/bin/monetdbd` -gt 1 ]] || /usr/local/bin/monetdbd start /var/lib/monetdb/dbfarm;

    - service: name=postgresql state=started

    - name: Configure PostgreSQL access permission settings
      shell: >
        mv /var/lib/pgsql/data/pg_hba.conf /var/lib/pgsql/data/pg_hba_conf`date +'%Y%m%d'`;
        echo 'local   all             all                                     trust' > /var/lib/pgsql/data/pg_hba.conf;
        echo 'host    all             all             127.0.0.1/32            trust' >> /var/lib/pgsql/data/pg_hba.conf;
        echo 'host    all             all             ::1/128                 trust' >> /var/lib/pgsql/data/pg_hba.conf;
        echo 'host    kddart_gis_enviro_v2_3_1  all           192.168.9.0/24        password' >> /var/lib/pgsql/data/pg_hba.conf;
        echo 'host    kddart_gis_enviro_v2_3_1  all           127.0.0.1/24          password' >> /var/lib/pgsql/data/pg_hba.conf;

    - service: name=mysql state=started

    - service: name=postgresql state=restarted

    - name: Append Marker SQL group_concat def
      shell: echo 'CREATE AGGREGATE group_concat(t text) RETURNS text external name "kddart"."group_concat";' >> {{ local_dir }}/other/db_files/kddart_marker_dal_v2.3.1.sql

    - name: Create KDDart Databases
      shell: "{{ local_dir }}/other/create_dbs.sh 1 kddart_gis_enviro_v2_3_1 {{ local_dir }}/other/db_files/kddart_gis_enviro_dal_v2.3.1_postgis2.sql kddart_v2_3_1 {{ local_dir }}/other/db_files/kddart_dal_v2.3.1.sql kddart_marker_v2_3_1 {{ local_dir }}/other/db_files/kddart_marker_dal_v2.3.1.sql 1"

    - name: Make host entry
      shell: "[[ `grep 'kddart.example.com' /etc/hosts` ]] || echo \"`ip route get 1 | awk '{print $NF;exit}'`	kddart.example.com\" >> /etc/hosts"

    - name: Copy apache configuration
      shell: "[[ -f /etc/apache2/vhosts.d/http-kddart.example.com.conf ]] || cp {{local_dir}}/other/http-kddart.example.com.conf /etc/apache2/vhosts.d"

    - name: Adapt apache configuration to Apache 2.4 Order
      shell: "[[ `grep '#Order allow,deny' /etc/apache2/vhosts.d/http-kddart.example.com.conf` ]] || sed -i 's/Order allow,deny/#Order allow,deny/g' /etc/apache2/vhosts.d/http-kddart.example.com.conf"

    - name: Comment Apache2.2 Allow
      shell: "[[ `grep '#Allow from all' /etc/apache2/vhosts.d/http-kddart.example.com.conf` ]] || sed -i 's/Allow from all/#Allow from all/g' /etc/apache2/vhosts.d/http-kddart.example.com.conf"

    - name: Uncomment Apache2.4 replacement setting
      shell: "[[ ! `grep '#Require all granted' /etc/apache2/vhosts.d/http-kddart.example.com.conf` ]] || sed -i 's/#Require all granted/Require all granted/g' /etc/apache2/vhosts.d/http-kddart.example.com.conf"

    - name: Create vhosts directory
      shell: "[[ -d {{apache_base_dir}}/vhosts ]] || mkdir {{apache_base_dir}}/vhosts"

    - name: Create kddart.example.com directory
      shell: "[[ -d {{apache_base_dir}}/vhosts/kddart.example.com ]] || mkdir {{apache_base_dir}}/vhosts/kddart.example.com"

    - name: Create sessions directory
      shell: "[[ -d {{apache_base_dir}}/session ]] || mkdir {{apache_base_dir}}/session"

    - name: Create secure directory for database passwords
      shell: "[[ -d {{apache_base_dir}}/secure ]] || mkdir {{apache_base_dir}}/secure"

    - name: Create monetdb password file
      shell: "[[ -f {{apache_base_dir}}/secure/monetdb_user.txt ]] || echo \"username = monetdb\npassword = {{monetdbpass}}\" > {{apache_base_dir}}/secure/monetdb_user.txt"

    - name: Create mysql password file
      shell: "[[ -f {{apache_base_dir}}/secure/mysql_user.txt ]] || echo \"username = kddart_dal\npassword = {{mysqlpass}}\" > {{apache_base_dir}}/secure/mysql_user.txt"

    - name: Create postgres password file
      shell: "[[ -f {{apache_base_dir}}/secure/postgres_user.txt ]] || echo \"username = kddart_dal\npassword = {{postgrespass}}\" > {{apache_base_dir}}/secure/postgres_user.txt"

    - name: Create directory for index.pl
      shell: "mkdir -p {{apache_base_dir}}/cgi-bin/kddart"

    - name: Create kddart temporary directory
      shell: "mkdir -p {{apache_base_dir}}/tmp/kddart"

    - name: Copy files to the relevant direcotries - due to * it needs in one line
      shell: cp -rp {{local_dir}}/vhosts/kddart.diversityarrays.com/* {{apache_base_dir}}/vhosts/kddart.example.com; cp -rp {{local_dir}}/perl-lib/* {{apache_base_dir}}/perl-lib; cp {{local_dir}}/other/kddart_dal.cfg {{apache_base_dir}}/secure; cp {{local_dir}}/cgi-bin/kddart/* {{apache_base_dir}}/cgi-bin/kddart;

    - name: Change ownership and permission
      shell: >
        chown wwwrun:www {{apache_base_dir}}/vhosts/kddart.example.com -R;
        chmod 755 {{apache_base_dir}}/vhosts/kddart.example.com -R;
        chown wwwrun:www {{apache_base_dir}}/session -R;
        chmod 750 {{apache_base_dir}}/session -R;
        chown wwwrun:www {{apache_base_dir}}/tmp -R;
        chmod 775 {{apache_base_dir}}/tmp -R;
        setfacl -d -m o::rx {{apache_base_dir}}/tmp/kddart;
	setfacl -d -m g::rwx {{apache_base_dir}}/tmp/kddart;

    - name: Make apache2 load perl module
      apache2_module: state=present name=perl

    - name: Make apache2 load headers module
      apache2_module: state=present name=headers

  handlers:

    - name: start mysql
      service:
        name: mysql
        state: started

    - name: start postgresql
      service:
        name: postgresql
        state: restarted

    - name: restart apache2
      service:
        name: apache2
        state: restarted

